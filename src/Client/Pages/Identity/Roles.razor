@page "/identity/roles"
@attribute [Authorize(Policy = Permissions.Roles.View)]
@inject Microsoft.Extensions.Localization.IStringLocalizer<Roles> _localizer
@using MinhasNoticias.Application.Responses.Identity
@using System.ComponentModel.Design

<style>
    .mud-table-container {
        overflow: auto;
    }
</style>

<AppTitle Title="@_localizer["Roles"]" Description="@_localizer["Manage Roles."]" />
@if (!_loaded)
{
    <Spinner />
}
else
{
    <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="false">
        <div class="mb-3">
            @if (_canCreateRoles)
                {
                    <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Primary" OnClick="(() => InvokeModal())" StartIcon="@Icons.Material.Filled.Add" IconColor="Color.Surface" Size="Size.Small">@_localizer["Create"]</MudButton>
                    <MudButton DisableElevation Variant="Variant.Filled" OnClick="GetRolesAsync" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Secondary" Size="Size.Small">@_localizer["Reload"]</MudButton>
                }
                else
                {
                    <MudButton DisableElevation Variant="Variant.Filled" OnClick="GetRolesAsync" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Secondary" Size="Size.Small">@_localizer["Reload"]</MudButton>
                }
        </div>
    </MudHidden>
    <MudTable Hover="true" Elevation="25" Items="_roleList" Dense="@_dense" Bordered="@_bordered" Striped="@_striped" Filter="new Func<RoleResponse, bool>(Search)" @bind-role="_role">
        <ToolBarContent>
            <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
                <div class="justify-center mud-text-align-center">
                @if (_canCreateRoles)
                {
                    <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Primary" OnClick="(() => InvokeModal())" StartIcon="@Icons.Material.Filled.Add" IconColor="Color.Surface">@_localizer["Create"]</MudButton>
                    <MudButton DisableElevation Variant="Variant.Filled" OnClick="GetRolesAsync" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Secondary">@_localizer["Reload"]</MudButton>
                }
                else
                {
                    <MudButton DisableElevation Variant="Variant.Filled" OnClick="GetRolesAsync" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Secondary">@_localizer["Reload"]</MudButton>
                }
            </div>
            </MudHidden>
            
            <MudSpacer />
            @if (_canSearchRoles)
            {
                <MudTextField @bind-Value="_searchString" Immediate="true" Placeholder="@_localizer["Search for Roles..."]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-3"></MudTextField>
            }
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<RoleResponse, object>(x => x.Id)">@_localizer["Id"]</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<RoleResponse, object>(x => x.Name)">@_localizer["Role"]</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<RoleResponse, object>(x => x.Description)">@_localizer["Description"]</MudTableSortLabel></MudTh>
            <MudTh Style="text-align:right">@_localizer["Actions"]</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="@_localizer["Role"]">
                <MudHighlighter Text="@context.Name" HighlightedText="@_searchString" />
            </MudTd>
            <MudTd DataLabel="@_localizer["Description"]">
                <MudHighlighter Text="@context.Description" HighlightedText="@_searchString" />
            </MudTd>
            <MudTd DataLabel="@_localizer["Actions"]" Style="text-align: right">
                @if (_canViewRoleClaims || _canEditRoles || _canDeleteRoles)
                    {
                        <MudHidden Breakpoint="Breakpoint.MdAndDown" Invert="false">
                            <MudMenu Label="@_localizer["Actions"]" Variant="Variant.Filled" DisableElevation="true" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Secondary" Direction="Direction.Left" OffsetX="true">
                                @if (_canViewRoleClaims)
                                    {
                                    <MudMenuItem @onclick="@(() => ManagePermissions(@context.Id))">@_localizer["Manage Permission"]</MudMenuItem>
                                    }
                                @if (_canEditRoles)
                                    {
                                    <MudMenuItem @onclick="@(() => InvokeModal(@context.Id))">@_localizer["Edit"]</MudMenuItem>
                                    }
                                @if (_canDeleteRoles)
                                    {
                                    <MudMenuItem @onclick="@(() => Delete(@context.Id))">@_localizer["Delete"]</MudMenuItem>
                                    }
                            </MudMenu>
                        </MudHidden>

                        <MudHidden Breakpoint="Breakpoint.MdAndDown" Invert="true">
                            <div class="d-flex gap-2">
                                @if (_canViewRoleClaims)
                                    {
                                    <MudIconButton Icon="@Icons.Filled.ManageAccounts" Variant="Variant.Outlined" Color="Color.Warning" Size="Size.Small" @onclick="@(() => ManagePermissions(@context.Id))"></MudIconButton>
                                    }
                                @if (_canEditRoles)
                                {
                                    <MudIconButton Icon="@Icons.Filled.Edit" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" @onclick="@(() => InvokeModal(@context.Id))"></MudIconButton>
                                }
                                @if (_canDeleteRoles)
                                {
                                    <MudIconButton Icon="@Icons.Filled.Delete" Variant="Variant.Outlined" Color="Color.Error" Size="Size.Small" @onclick="@(() => Delete(@context.Id))"></MudIconButton>
                                }
                            </div>
                        </MudHidden>
                    }
                    else
                    {
                    <MudButton Variant="Variant.Filled"
                               DisableElevation="true"
                               StartIcon="@Icons.Material.Filled.DoNotTouch"
                               IconColor="Color.Secondary"
                               Size="Size.Small"
                               Color="Color.Surface">
                        @_localizer["No Allowed Actions"]
                    </MudButton>
                    }
            </MudTd>
        </RowTemplate>
        <FooterContent>
            <MudSwitch @bind-Checked="@_dense" Color="Color.Secondary" Style="margin-left: 5px;">@_localizer["Dense"]</MudSwitch>
            <MudSwitch @bind-Checked="@_striped" Color="Color.Tertiary" Style="margin-left: 5px;">@_localizer["Striped"]</MudSwitch>
            <MudSwitch @bind-Checked="@_bordered" Color="Color.Warning" Style="margin-left: 5px;">@_localizer["Bordered"]</MudSwitch>
        </FooterContent>
        <PagerContent>
            <TablePager />
        </PagerContent>
    </MudTable>
}